apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: penpot-db  
  name: penpot-db
  namespace: penpot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: penpot-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: penpot-db  
    spec:
      containers:
        - name: penpot-db
          image: postgres:13
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: PENPOT_DATABASE_NAME
                  name: variables-env  
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: PENPOT_DATABASE_HOST
                  name: variables-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: PENPOT_DATABASE_PASSWORD
                  name: variables-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: PENPOT_DATABASE_USERNAME
                  name: variables-env
          imagePullPolicy: ""
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: penpot-db-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: penpot-db-data
        persistentVolumeClaim:
          claimName: penpot-db-data
status: {}
---  
apiVersion: v1
kind: Service
metadata:
  labels:
    app: penpot-db
  name: penpot-db
  namespace: penpot
spec:
  ports:
  - name: "5432"
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: penpot-db  